apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: "jetty"

import org.apache.tools.ant.filters.ReplaceTokens

group = 'com.albertocolella'
version = '0.0.1-SNAPSHOT'

description = "java-rest-api"

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

if (!hasProperty('httpPort')) {
	httpPort = 7070
}
stopPort = 9080
stopKey = "stopKey"

if (!hasProperty('mainClass')) {
    ext.mainClass = 'com.albertocolella.rest_bootstrap.App'
}
repositories {
    mavenCentral()
    maven {
        url 'http://download.eclipse.org/rt/eclipselink/maven.repo'
    }
}
dependencies {
    compile group: 'org.eclipse.jetty', name: 'jetty-maven-plugin', version:'9.3.7.v20160115'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlets', version:'9.3.7.v20160115'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version:'2.22.2'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version:'2.22.2'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-processing', version:'2.22.2'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-moxy', version:'2.22.2'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version:'2.22.2'
    compile group: 'net.sf.json-lib', name: 'json-lib', version:'2.4', classifier:'jdk15'
    compile group: 'org.hibernate', name: 'hibernate-core', version:'5.1.0.Final'
    compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.38'
    compile group: 'org.hsqldb', name: 'hsqldb', version:'2.3.3'
    compile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version:'2.22.2'
    compile group: 'io.swagger', name: 'swagger-jersey2-jaxrs', version:'1.5.8'
    compile group: 'org.slf4j', name: 'slf4j-simple', version:'1.7.21'
    runtime group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version:'2.22.2'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'1.9.5'
}

// TODO inserire valori in hibernate.cfg.xml
// a seconda dell'ambiente
ext.customProps = new Properties()
// TODO rendere 'dev' il default, ma dare possibilit√†
// di passare altri ambienti
def propsFile = "$projectDir/src/main/resources/dev/config.properties"
def destFile = "$projectDir/src/main/resources/config.properties"
customProps.load(new FileInputStream(propsFile))
if (hasProperty('customPropsFile')) {
	customProps.load(new FileInputStream(customPropsFile))
}
def writer = new FileWriter(file(destFile))
try {
	customProps.store(writer, 'File automatically generated by Gradle')
    writer.flush()
} finally {
    writer.close()
}

project.copy {
  from file('src/main/resources/templates/hibernate.cfg.xml')
  into 'src/main/resources'
  filter(ReplaceTokens, tokens: customProps)
}
